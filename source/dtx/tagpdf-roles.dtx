% \iffalse meta-comment
%
%% File: tagpdf-roles.dtx
%
% Copyright (C) 2019-2021 Ulrike Fischer
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
% This file is part of the "tagpdf bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/u-fischer/tagpdf
%
% for those people who are interested.
%
% \fi
%
%    \begin{macrocode}
%<@@=tag>
%<*roles>
\ProvidesExplPackage {tagpdf-roles-code} {2021/02/23} {0.80}
 {part of tagpdf - code related to roles and structure names}
%    \end{macrocode}
% \section{Variables}
% Tags have both a name (a string) and a number (for the lua attribute).
% Testing a name is easier with a prop, while accessing with a number is
% better done with a seq. So both are used and must be kept in sync if a new
% tag is added.
% \begin{macro}{\g_@@_role_tags_seq,\g_@@_role_tags_prop}
%    \begin{macrocode}
\@@_seq_new:N     \g_@@_role_tags_seq  %to get names from numbers
\@@_prop_new:N    \g_@@_role_tags_prop %to get numbers from names
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\g_@@_role_tags_NS_prop}
% in pdf 2.0 tags belong to a name space. We record this in a prop.
% The keys are the tags, the value shorthands like pdf2, or mathml.
%    \begin{macrocode}
\@@_prop_new:N    \g_@@_role_tags_NS_prop %to namespace info
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\g_@@_role_NS_seq}
% The standard names spaces are the following. The keys are the name
% tagpdf will use,  the urls are the identifier in the namespace object.
% \begin{description}
% \item[mathml] http://www.w3.org/1998/Math/MathML
% \item[pdf2]  http://iso.org/pdf2/ssn
% \item[pdf] http://iso.org/pdf/ssn (default)
% \end{description}
% The objects references of the namespaces must be collected in a seq, so that an
% array can be written to the StructTreeRoot at the end (see tagpdf-tree).
%    \begin{macrocode}
\@@_seq_new:N     \g_@@_role_NS_seq % collect namespaces
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%The list of standard adobe tags, namespace pdf 1.7.
\clist_const:Nn \c_@@_role_sttags_clist
  {%possible root elements
    Document,   %A complete document. This is the root element of any structure tree containing
                %multiple parts or multiple articles.
    Part,       %A large-scale division of a document.
    Art,        %not 2.0,A relatively self-contained body of text constituting a single narrative or exposition
    %subelements
    Sect,       %A container for grouping related content elements.
    Div,        %A generic block-level element or group of elements
    BlockQuote, %A portion of text consisting of one or more paragraphs attributed to someone other
                %than the author of the  surrounding text.
    Caption,    %A brief portion of text describing a table or figure.
    TOC,        %A list made up of table of contents item entries (structure tag TOCI; see below)
                %and/or other nested table of contents entries
    TOCI,       %An individual member of a table of contents. This entry's children can be any of
                %the following structure  tags:
                %Lbl,Reference,NonStruct,P,TOC
    Index,
    NonStruct,  %probably not needed
    H,
    H1,
    H2,
    H3,
    H4,
    H5,
    H6,
    P,
    L,           %list
    LI,          %list item (around label and list item body)
    Lbl,         %list label
    LBody,       %list item body
    Table,
    TR,          %table row
    TH,          %table header cell
    TD,          %table data cell
    THead,       %table header (n rows)
    TBody,       %table rows
    TFoot,       %table footer
    Span,        %generic inline marker
    Quote,       %inline quote
    Note,        % footnote, endnote. Lbl can be child
    Reference,   % A citation to content elsewhere in the document.
    BibEntry,    %bibentry
    Code,        %
    Link,        %
    Annot,
    Figure,
    Formula,
    Form,
    % ruby warichu etc ..
    Ruby,
    RB,
    RT,
    Warichu,
    WT,
    WP,
    Artifact % only MC-tag ?...
  }

\clist_const:Nn \c_@@_role_sttags_only_pdf_clist
 {
   Art,
   BlockQuote,
   TOC,
   TOCI,
   Index,
   Private,
   Quote,
   Note,
   Reference,
   BibEntry,
   Code
 }

\clist_const:Nn \c_@@_role_sttags_only_pdfII_clist
 {
   DocumentFragment
   ,Aside
   ,H7
   ,H8
   ,H9
   ,H10
   ,Title
   ,FENote
   ,Sub
   ,Em
   ,Strong
   ,Artifact
 }


%The list of standard pdf2.0, storing only for now.
\clist_const:Nn \c_@@_role_sttagsTWO_clist
  {%possible root elements
    Document,   %A complete document. This is the root element of any structure tree containing
                %multiple parts or multiple articles.
    DocumentFragment, %only 2.0, a fragment from another document.
    Part,       %A large-scale division of a document.
    Sect,       %A container for grouping related content elements.
    Div,        %A generic block-level element or group of elements
    Aside,      % only 2.0
    NonStruct,  % (grouping element)
    Caption,    %A brief portion of text describing a table or figure.
    Title,      %only 2.0.
    Sub,        %only 2.0
    H,
    H1,
    H2,
    H3,
    H4,
    H5,
    H6,
    H7, % only 2.0 and more Hn
    P,
    FENote,      %only 2.0 (footnote/endnote)
    L,           %list
    LI,          %list item (around label and list item body)
    Lbl,         %list label
    LBody,       %list item body
    Table,
    TR,          %table row
    TH,          %table header cell
    TD,          %table data cell
    THead,       %table header (n rows)
    TBody,       %table rows
    TFoot,       %table footer
    Span,        %generic inline marker
    Em,          %only 2.0
    Strong,      %only 2.0
    Link,        %
    Annot,
    Figure,
    Formula,
    Form,
    Artifact,
    % ruby warichu etc ..
    Ruby,
    RB,
    RT,
    Warichu,
    WT,
    WP,
  }

\prop_const_from_keyval:Nn \c_@@_role_map_sttagsTWO_prop
  {
    DocumentFragment = Art, %only 2.0, a fragment from another document.
    Aside = Note,    %only 2.0
    Title = H1,      %only 2.0.
    Sub   = Span,    %only 2.0
    H7    = H6 ,     %only 2.0 and more Hn
    H8    = H6 ,
    H9    = H6 ,
    H10   = H6,
    FENote= Note,     %only 2.0 (footnote/endnote)
    Em    = Span,     %only 2.0
    Strong= Span,     %only 2.0
  }

\bool_lazy_or:nnT
  { \pdf_version_compare_p:Nn > {1.9} }
  { \str_if_eq_p:ee{\pdf_version_major:}{-1} }
  { %pdf 2.0
    \pdf_object_new:nn {c_@@_role_NS_pdf2_obj}{dict}
    \pdf_object_new:nn {c_@@_role_NS_pdf2_map_obj}{dict}
    \pdf_object_write:nx{c_@@_role_NS_pdf2_obj}
      {
        /Type/Namespace
        /NS(http://iso.org/pdf2/ssn)
        /RoleMapNS\c_space_tl \pdf_object_ref:n{c_@@_role_NS_pdf2_map_obj}
      }
    \seq_gput_right:Nx \g_@@_role_NS_seq
      {\pdf_object_ref:n {c_@@_role_NS_pdf2_obj}}
    %pdf 1.7
    \pdf_object_new:nn {c_@@_role_NS_pdf_obj}{dict}
    \pdf_object_new:nn {c_@@_role_NS_pdf_map_obj}{dict}
    \pdf_object_write:nx{c_@@_role_NS_pdf_obj}
      {
         /Type/Namespace
         /NS(http://iso.org/pdf/ssn)
         /RoleMapNS\c_space_tl \pdf_object_ref:n{c_@@_role_NS_pdf_map_obj}
      }
    \seq_gput_right:Nx \g_@@_role_NS_seq
      {\pdf_object_ref:n {c_@@_role_NS_pdf_obj}}
    %mathml
    \pdf_object_new:nn {c_@@_role_NS_mathml_obj}{dict}
    \pdf_object_new:nn {c_@@_role_NS_mathml_map_obj}{dict}
    \pdf_object_write:nx{c_@@_role_NS_mathml_obj}
      {
        /Type/Namespace
        /NS(http://www.w3.org/1998/Math/MathML)
        /RoleMapNS\c_space_tl \pdf_object_ref:n{c_@@_role_NS_mathml_map_obj}
      }
    \seq_gput_right:Nx \g_@@_role_NS_seq
         {\pdf_object_ref:n {c_@@_role_NS_mathml_obj}}
  }



% get tag name from number: \seq_item:Nn \g_@@_role_tags_seq { n }
%\seq_gset_from_clist:NN \g_@@_role_tags_seq \c_@@_role_tags_clist

\clist_map_inline:Nn \c_@@_role_sttags_clist
  {
    \@@_seq_gput_right:Nn \g_@@_role_tags_seq { #1 }
  }


% get tag number from name: \prop_item:Nn \g_@@_role_tags_prop { name }
\int_step_inline:nnnn { 1 }{ 1 }{ \seq_count:N \g_@@_role_tags_seq }
  {
    \@@_prop_gput:Nxn \g_@@_role_tags_prop
      {
        \seq_item:Nn \g_@@_role_tags_seq  { #1 }
      }
      { #1 }
  }

%only used in tests
\cs_new:Nn \@@_role_get_tag_from_index:nn
  {
    \@@_seq_item:cn { #1_seq } { #2 }
  }

\cs_new:Nn \@@_role_get_index_from_tag:nn
  {
    \@@_prop_item:cn { #1_prop } { #2 }
  }

% new tags and the rolemap

\@@_prop_new:N \g_@@_role_rolemap_prop

\cs_new_protected:Nn \@@_role_add_tag:nn %new name, reference to old
  {
    \@@_seq_gput_right:Nn \g_@@_role_tags_seq { #1 }
    \@@_prop_gput:Nnx \g_@@_role_tags_prop    { #1 }
      {
        \seq_count:N \g_@@_role_tags_seq
      }
    \@@_check_add_tag_role:nn {#1}{#2}
    \tl_if_empty:nF { #2 }
      {
        \@@_prop_gput:Nnn \g_@@_role_rolemap_prop
          { #1 } { #2 }
      }
  }

%this requires that the version is already set. So if it wanders in the kernel
% it must be delayed.
\bool_lazy_or:nnT
  { \pdf_version_compare_p:Nn < {2.0} }
  { \str_if_eq_p:ee{\pdf_version_major:}{-1} }
  {
     \prop_map_inline:Nn \c_@@_role_map_sttagsTWO_prop
       {
         \@@_role_add_tag:nn {#1}{#2}
       }
  }

\cs_generate_variant:Nn \@@_role_add_tag:nn {xx}

\keys_define:nn { @@ / setup }
  {
    add-new-tag .code:n =
     {
       \seq_set_split:Nnn \l_tmpa_seq { / } {#1/}
       \@@_role_add_tag:xx
         {
           \seq_item:Nn \l_tmpa_seq {1}
         }
         {
           \seq_item:Nn \l_tmpa_seq {2}
         }
     }
  }


%</roles>
%    \end{macrocode}
